"""
Users table

Revision ID: 11832e1d67da
Revises: aa2f828b847a
Create Date: 2023-12-21 21:39:46.275482

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "11832e1d67da"
down_revision: Union[str, None] = "aa2f828b847a"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table("users",
                    sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column("tg_id", sa.BigInteger(), nullable=False),
                    sa.Column("created_at", sa.DateTime(), nullable=False,
                              server_default=sa.func.current_timestamp()),
                    sa.Column("updated_at", sa.DateTime(), nullable=False,
                              server_default=sa.func.current_timestamp(),
                              server_onupdate=sa.func.current_timestamp()),
                    sa.PrimaryKeyConstraint("id", name=op.f("pk_users")),
                    sa.UniqueConstraint("tg_id", name=op.f("uq_users_tg_id"))
                    )

    op.add_column(
        "tracking",
        sa.Column(
            "created_at",
            sa.DateTime(),
            nullable=False,
            server_default=sa.func.current_timestamp(),
            server_onupdate=sa.func.current_timestamp()
        )
    )
    op.add_column(
        "tracking",
        sa.Column(
            "updated_at",
            sa.DateTime(),
            nullable=False,
            server_default=sa.func.current_timestamp(),
            server_onupdate=sa.func.current_timestamp()
        )
    )

    op.add_column("tracking", sa.Column("user_id", sa.Integer(), nullable=True))
    op.create_foreign_key(
        op.f("fk_tracking_user_id_users"),
        "tracking",
        "users",
        ["user_id"],
        ["id"]
    )
    op.execute("INSERT INTO users (tg_id) SELECT tg_user_id FROM tracking ON CONFLICT (tg_id) DO NOTHING")
    op.execute("UPDATE tracking SET user_id=(SELECT id FROM users WHERE tg_id = tracking.tg_user_id)")
    op.alter_column("tracking", "user_id", nullable=False)

    op.drop_column("tracking", "tg_user_id")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "tracking",
        sa.Column("tg_user_id", sa.INTEGER(), autoincrement=False, nullable=True)
    )
    op.execute("UPDATE tracking SET tg_user_id=(SELECT tg_id FROM users WHERE id = tracking.user_id)")
    op.alter_column("tracking", "tg_user_id", nullable=False)

    op.drop_constraint(op.f("fk_tracking_user_id_users"), "tracking", type_="foreignkey")
    op.drop_column("tracking", "updated_at")
    op.drop_column("tracking", "created_at")
    op.drop_column("tracking", "user_id")
    op.drop_table("users")
    # ### end Alembic commands ###
