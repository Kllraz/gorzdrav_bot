"""
Hours instead of Time ranges.
The database stores hours, not time ranges

Revision ID: ad13fb3ae5b2
Revises: 11832e1d67da
Create Date: 2023-12-23 18:00:57.931924

"""
from itertools import chain, groupby
from operator import itemgetter, sub
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy import text
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "ad13fb3ae5b2"
down_revision: Union[str, None] = "11832e1d67da"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "tracking",
        sa.Column(
            "hours",
            sa.ARRAY(sa.Integer()),
            nullable=True)
    )

    conn = op.get_bind()
    results = conn.execute(text("select id, time_ranges from tracking")).fetchall()
    for id_, time_ranges in results:
        hours = set(chain.from_iterable(
            (range(i[0], i[1] + 1) for i in time_ranges)
        ))
        op.execute(
            text("UPDATE tracking SET hours=:hours WHERE id=:id").bindparams(id=id_, hours=hours)
        )

    op.alter_column("tracking", "hours", nullable=False)
    op.drop_column("tracking", "time_ranges")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "tracking",
        sa.Column(
            "time_ranges",
            postgresql.ARRAY(sa.INTEGER()),
            nullable=True
        )
    )

    conn = op.get_bind()
    results = conn.execute(text("select id, hours from tracking")).fetchall()
    for id_, hours in results:
        time_ranges = []

        for k, g in groupby(enumerate(hours), lambda x: sub(*x)):
            items = list(map(itemgetter(1), g))
            if len(items) > 1:
                time_ranges.append([items[0], items[-1]])
            else:
                time_ranges.append([items[0], items[0]])

        op.execute(
            text("UPDATE tracking SET time_ranges=:time_ranges WHERE id=:id")
            .bindparams(id=id_, time_ranges=time_ranges)
        )

    op.alter_column("tracking", "time_ranges", nullable=False)
    op.drop_column("tracking", "hours")
    # ### end Alembic commands ###
